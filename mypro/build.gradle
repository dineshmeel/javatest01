/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */
import org.apache.tools.ant.filters.ReplaceTokens 
import org.gradle.util.GradleVersion
import org.gradle.api.java.archives.internal.DefaultManifest
def appName = 'mypro'
def GROUP_ID = ' com.dk.niku.startup'
def ARTIFACT_ID = 'mypro'
def versionId = '1.0.0.1'
def log4j2Version = '2.7'
def jerseyVersion = '2.25'
def jettyVersion = '9.4.18.v20190429'
def mainClassName = 'com.dk.niku.startup.Launcher'
// Apply the java-library plugin to add support for Java Library
//Plugins
apply plugin: 'java'
apply plugin: 'eclipse'
sourceCompatibility = 1.8
/**
* Handling Different Gradle Versions
*/
final GradleVersion gradleVersion = GradleVersion.current()
final GradleVersion gradle5_0 = GradleVersion.version('5.0')
def classesDirectory = 'sourceSets.main.output.classesDir'
if (gradleVersion > gradle5_0) {
	classesDirectory = 'sourceSets.main.output.classesDirs'
}

eclipse {
  project {
    name = 'mypro'
  }
}
//Source Folders
sourceSets {
	main {
		java {
			srcDirs = []
			srcDir 'src/main/java'
		}
	}
}
//Task to copy dependencies to the assigned folder
task copyToLib(type: Copy) {
    into "$buildDir/libs/lib"
    from configurations.compile
}


//Build a standalone jar.
task uberjar(type: Jar) {
	baseName = ARTIFACT_ID + '-' + versionId + '-all'
    from files(classesDirectory)
    from {configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
	}
	manifest {
		attributes 'Implementation-Title': appName,
				   'Implementation-Version': versionId,
				   'Main-Class': mainClassName,
	               'Built-JDK': System.getProperty('java.version'),
				   'Built-By': System.getProperty('user.name'),
	               'Built-Date': new Date()
	}
	zip64 true
	with jar
}
// In this section you declare where to find the dependencies of your project
repositories {
	mavenCentral()
}

dependencies{
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
	compile group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyVersion
	compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jettyVersion
	compile group: 'org.eclipse.jetty', name: 'jetty-annotations', version: jettyVersion
	compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: jettyVersion
	compile group: 'org.eclipse.jetty', name: 'apache-jsp', version: jettyVersion
	compile group: 'org.eclipse.jetty', name: 'apache-jstl', version: jettyVersion
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: jerseyVersion
	compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: jerseyVersion
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: jerseyVersion
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jerseyVersion
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
}

